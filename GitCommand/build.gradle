apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.github.gjwlfeng.git-command'


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    compile gradleApi()
    compile localGroovy()
}

version '1.0.9'
group = "io.github.gjwlfeng"
ext.artifactId = "Git-Command"
archivesBaseName = artifactId

def isSnapshot = true

if (isSnapshot) {
    def fixVersion = 1
    version(version + ".${fixVersion}-SNAPSHOT")
}

def myPomName = artifactId
def myPom = [
        name       : myPomName,
        artifactId : myPomName,
        description: "Fast git operation。",
        gitUrl     : "https://github.com/gjwlfeng/GitCommand",
        developer  : [
                id   : 'ZengFeng',
                name : 'ZengFeng',
                email: '903600017@qq.com',
        ],
        license    : [
                name: 'The Apache License, Version 2.0',
                url : 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        ]
]

signing {
    sign configurations.archives
}


tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name myPom.name
                packaging 'jar'
                // optionally artifactId can be defined here
                description myPom.description
                url myPom.gitUrl

                scm {
                    connection myPom.gitUrl
                    developerConnection myPom.gitUrl
                    url myPom.gitUrl
                }

                licenses {
                    license {
                        name myPom.license.name
                        url myPom.license.url
                    }
                }

                developers {
                    developer {
                        id myPom.developer.id
                        name myPom.developer.name
                        email myPom.developer.email
                    }
                }
            }
        }
    }
}

gitConfig {
    //当前版本名称 ,git commit ,git tag 都会用到
    versionName version
    changedLogFile = project.file("logging-git.txt")
    workDirFile = project.rootProject.projectDir
    repositories {
        origin {}
    }
}